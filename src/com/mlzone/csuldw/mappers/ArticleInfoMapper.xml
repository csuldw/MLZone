<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.mlzone.csuldw.dao.IArticleInfoMapper">
	<resultMap id="BaseResultMap" type="com.mlzone.csuldw.entity.ArticleInfoEntity">
		<id column="id" property="id" jdbcType="INTEGER" />
		<result column="title" property="title" jdbcType="VARCHAR" />
		<result column="file_path" property="filePath" jdbcType="VARCHAR" />
		<result column="author" property="author" jdbcType="VARCHAR" />
		<result column="user_id" property="userId" jdbcType="INTEGER" />
		<result column="keywords" property="keywords" jdbcType="VARCHAR" />
		<result column="tags" property="tags" jdbcType="VARCHAR" />
		<result column="post_type" property="postType" jdbcType="INTEGER" />
		<result column="is_publish" property="isPublish" jdbcType="INTEGER" />
		<result column="category_id" property="categoryId" jdbcType="INTEGER" />
		<result column="public_date" property="publicDate" jdbcType="VARCHAR" />
		<association property="userEntity" column="user_id" select="com.mlzone.csuldw.dao.IUserMapper.getById" />
		<association property="articleCategoryEntity" column="category_id" select="com.mlzone.csuldw.dao.IArticleCategoryMapper.getById" />
	</resultMap>
	<sql id="Base_Column_List">
		id, title, file_path, author, user_id, keywords, tags, post_type, is_publish, category_id,
		public_date
	</sql>
	<select id="getById" resultMap="BaseResultMap" parameterType="java.lang.Integer">
		select
		<include refid="Base_Column_List" />
		from tb_article_info
		where id = #{id,jdbcType=INTEGER}
	</select>
	<delete id="deleteById" parameterType="java.lang.Integer">
		delete from tb_article_info
		where id = #{id,jdbcType=INTEGER}
	</delete>
	<insert id="saveOrUpdate" parameterType="com.mlzone.csuldw.entity.ArticleInfoEntity">
		insert into tb_article_info(
			id, 
			title, 
			file_path,
			author,
			user_id, 
			keywords, 
			tags,
			post_type, 
			is_publish,
			category_id, 
			public_date
		)
		values(
			#{id,jdbcType=INTEGER}, 
			#{title,jdbcType=VARCHAR},
			#{filePath,jdbcType=VARCHAR},
			#{author,jdbcType=VARCHAR},
			#{userId,jdbcType=INTEGER}, 
			#{keywords,jdbcType=VARCHAR}, 
			#{tags,jdbcType=VARCHAR},
			#{postType,jdbcType=INTEGER}, 
			#{isPublish,jdbcType=INTEGER}, 
			#{categoryId,jdbcType=INTEGER},
			#{publicDate,jdbcType=VARCHAR}
		) 
		ON DUPLICATE KEY UPDATE
			title = #{title,jdbcType=VARCHAR},
			file_path = #{filePath,jdbcType=VARCHAR},
			author = #{author,jdbcType=VARCHAR},
			user_id = #{userId,jdbcType=INTEGER},
			keywords = #{keywords,jdbcType=VARCHAR},
			tags = #{tags,jdbcType=VARCHAR},
			post_type = #{postType,jdbcType=INTEGER},
			is_publish = #{isPublish,jdbcType=INTEGER},
			category_id = #{categoryId,jdbcType=INTEGER},
			public_date = #{publicDate,jdbcType=VARCHAR}
	</insert>
	<insert id="saveSelective" parameterType="com.mlzone.csuldw.entity.ArticleInfoEntity">
		insert into tb_article_info
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				id,
			</if>
			<if test="title != null">
				title,
			</if>
			<if test="filePath != null">
				file_path,
			</if>
			<if test="author != null">
				author,
			</if>
			<if test="userId != null">
				user_id,
			</if>
			<if test="keywords != null">
				keywords,
			</if>
			<if test="tags != null">
				tags,
			</if>
			<if test="postType != null">
				post_type,
			</if>
			<if test="isPublish != null">
				is_publish,
			</if>
			<if test="categoryId != null">
				category_id,
			</if>
			<if test="publicDate != null">
				public_date,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=INTEGER},
			</if>
			<if test="title != null">
				#{title,jdbcType=VARCHAR},
			</if>
			<if test="filePath != null">
				#{filePath,jdbcType=VARCHAR},
			</if>
			<if test="author != null">
				#{author,jdbcType=VARCHAR},
			</if>
			<if test="userId != null">
				#{userId,jdbcType=INTEGER},
			</if>
			<if test="keywords != null">
				#{keywords,jdbcType=VARCHAR},
			</if>
			<if test="tags != null">
				#{tags,jdbcType=VARCHAR},
			</if>
			<if test="postType != null">
				#{postType,jdbcType=INTEGER},
			</if>
			<if test="isPublish != null">
				#{isPublish,jdbcType=INTEGER},
			</if>
			<if test="categoryId != null">
				#{categoryId,jdbcType=INTEGER},
			</if>
			<if test="publicDate != null">
				#{publicDate,jdbcType=VARCHAR},
			</if>
		</trim>
	</insert>
	<update id="updateSelective" parameterType="com.mlzone.csuldw.entity.ArticleInfoEntity">
		update tb_article_info
		<set>
			<if test="title != null">
				title = #{title,jdbcType=VARCHAR},
			</if>
			<if test="filePath != null">
				file_path = #{filePath,jdbcType=VARCHAR},
			</if>
			<if test="author != null">
				author = #{author,jdbcType=VARCHAR},
			</if>
			<if test="userId != null">
				user_id = #{userId,jdbcType=INTEGER},
			</if>
			<if test="keywords != null">
				keywords = #{keywords,jdbcType=VARCHAR},
			</if>
			<if test="tags != null">
				tags = #{tags,jdbcType=VARCHAR},
			</if>
			<if test="postType != null">
				post_type = #{postType,jdbcType=INTEGER},
			</if>
			<if test="isPublish != null">
				is_publish = #{postType,jdbcType=INTEGER},
			</if>
			<if test="categoryId != null">
				category_id = #{categoryId,jdbcType=INTEGER},
			</if>
			<if test="publicDate != null">
				public_date = #{publicDate,jdbcType=VARCHAR},
			</if>
		</set>
		where id = #{id,jdbcType=INTEGER}
	</update>
	<update id="update" parameterType="com.mlzone.csuldw.entity.ArticleInfoEntity">
		update tb_article_info
		set title = #{title,jdbcType=VARCHAR},
		file_path = #{filePath,jdbcType=VARCHAR},
		author = #{author,jdbcType=VARCHAR},
		user_id = #{userId,jdbcType=INTEGER},
		keywords = #{keywords,jdbcType=VARCHAR},
		tags = #{tags,jdbcType=VARCHAR},
		post_type = #{postType,jdbcType=INTEGER},
		is_publish = #{isPublish,jdbcType=INTEGER},
		category_id = #{categoryId,jdbcType=INTEGER},
		public_date = #{publicDate,jdbcType=VARCHAR}
		where id = #{id,jdbcType=INTEGER}
	</update>
	
 	<select id="getList" resultMap="BaseResultMap">
		select * from tb_article_info
	</select>
	
	<select id="getListByParam" parameterType="Map" resultMap="BaseResultMap">
		SELECT 
			t.id id,
			t.title title,
			t.file_path filePath,
			t.author author,
			t.user_id userId,
			t.keywords keywords,
			t.tags tags,
			t.post_type postType,
			t.is_publish isPublish,
			t.category_id categoryId,
			t.public_date publicDate,
			a.category_name categoryName,
			t.user_id user_id,
			t.category_id category_id
		FROM tb_article_info t
		left join tb_article_category a  on t.category_id = a.id
		WHERE 1 = 1
		<if test=" title != null and title != '' ">
			AND t.title=#{title}
		</if>
		<if test=" author != null and author != '' ">
			AND t.author=#{author}
		</if>
		<if test=" tags != null and tags != '' ">
			AND (t.tags LIKE CONCAT('%',#{tags},'%')
		</if>
		<if test=" categoryName != null and categoryName != '' ">
			AND a.category_name=#{categoryName}
		</if>
		<if test=" publicDate != null and publicDate != '' ">
			AND (t.public_date LIKE CONCAT('%',#{publicDate},'%')
		</if>
		<if test="keywords != null and keywords != ''">
			AND CONCAT_WS(
			    '/-/',
			    t.title,
			    t.author, 
			    t.keywords, 
			    t.tags,
			    a.category_name
			) LIKE CONCAT('%',#{keywords},'%')
		</if>
	</select>
	
	<select id="getArticleCountByQueryType" resultType="com.mlzone.csuldw.entity.vo.ArticleCountStatVo">
		SELECT
			date_format(t.public_date, #{queryType}) queryType,
			count(*) articleNumber
		FROM
			mlzone.tb_article_info t
		GROUP BY queryType
	</select>
	
</mapper>
